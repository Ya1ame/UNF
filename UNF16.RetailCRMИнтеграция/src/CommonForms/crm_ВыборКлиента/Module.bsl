#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Телефон, НомерКарты");
	
	УчастиеВПЛ = СписокУчастийВПЛ(Телефон, НомерКарты);
	СписокКлиентов.Загрузить(УчастиеВПЛ);

	Если УчастиеВПЛ.Количество() = 0 Тогда 
		Элементы.Создать.Доступность = Истина;
		Элементы.Выбрать.Видимость = Ложь;
	Иначе 
	 	Элементы.Создать.Видимость = Ложь;
		Элементы.Выбрать.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Клиент = Элементы.СписокКлиентов.ТекущиеДанные;
	
	Если Клиент = Неопределено Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выберите клиента.");
		Возврат;
	КонецЕсли;
	
	ФИО = Клиент.ФИО;
	Фамилия  = ВыделитьСлово(ФИО, 1);
	Имя      = ВыделитьСлово(ФИО, 2);
	Отчество = ВыделитьСлово(ФИО, 3);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТелефонДляПроверки", Клиент.Телефон);
	СтруктураПараметров.Вставить("ИД"				 , Клиент.IDучастия);
	СтруктураПараметров.Вставить("Баллы"			 , Клиент.КоличествоБонусов);
	СтруктураПараметров.Вставить("Уровень"			 , Клиент.Уровень);
	СтруктураПараметров.Вставить("ФИО"				 , Клиент.ФИО);
	СтруктураПараметров.Вставить("Фамилия"			 , Фамилия);
	СтруктураПараметров.Вставить("Имя"				 , Имя);
	СтруктураПараметров.Вставить("Отчество"			 , Отчество);
	СтруктураПараметров.Вставить("КлиентCRM"		 , Истина);
	СтруктураПараметров.Вставить("УчастникПЛ"		 , Клиент.УчастникПЛ);
	СтруктураПараметров.Вставить("IDКлиента"		 , Клиент.IDКлиента);
	
	Если Не Клиент.УчастникПЛ Тогда 
				
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, СтруктураПараметров);
		ПоказатьВопрос(ОписаниеОповещения
						, "Клиент не зарегистрирован в программе лояльности. Зарегистрировать?"
						, РежимДиалогаВопрос.ДаНет
						,
						,
						,
						, КодВозвратаДиалога.Да); 
		
	Иначе
		
		СтруктураПараметров.Вставить("НомерКарты"	 , Клиент.НомерКарты);
		
		Закрыть(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("КлиентСозданВCRM"	  , Ложь);
	СтруктураПараметров.Вставить("Телефон" 			  , Телефон);
	СтруктураПараметров.Вставить("Фамилия"	  		  , "");
	СтруктураПараметров.Вставить("Имя"				  , "");
	СтруктураПараметров.Вставить("Отчество"			  , "");
	СтруктураПараметров.Вставить("IDКлиента"		  , "");
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ЗаполнитьФормуВыбораКлиента", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.crm_РегистрацияКлиента"
				, СтруктураПараметров
				, ЭтотОбъект
				,
				,
				,
				, ОбработчикОповещения
				, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СписокУчастийВПЛ(НомерТел, НомерКарты) Экспорт
	
	ApiKey 	= crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КлючCRM");
	ИмяСервера 	= crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИмяСервера");
	
	Если ЗначениеЗаполнено(НомерТел) Тогда 
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера, 
									 "/api/v5/loyalty/accounts?filter[phoneNumber]=" + НомерТел + "&apiKey=" + ApiKey);
	Иначе 
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера,
									 "/api/v5/loyalty/accounts?filter[cardNumber]=" + НомерКарты + "&apiKey=" + ApiKey);
	КонецЕсли;
		
	Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);
	УчастиеВПЛ = ПолучитьСтруктуруТаблицыКлиента();	
	
	Если Ответ["loyaltyAccounts"].Количество() <> 0 Тогда
		
		ClientID = "";
		НазваниеУровня = "";
		Для каждого Лояльность Из Ответ["loyaltyAccounts"] Цикл
			СтрТЗ = УчастиеВПЛ.Добавить();
			
			Клиент  	= Лояльность["customer"];
			ClientID 	= Формат(Клиент["id"], "ЧГ=0");
			
			Имя		 = ?(Клиент["firstName"] <> Неопределено, Клиент["firstName"], 	""); 
			Фамилия  = ?(Клиент["lastName"] <> Неопределено, Клиент["lastName"], 	"");
			Отчество = ?(Клиент["patronymic"] <> Неопределено, Клиент["patronymic"], "");
			
			Уровень 		= Лояльность["level"];
			НазваниеУровня	= Уровень["name"];
			
			СтрТЗ.ФИО 					= СокрЛП(Фамилия + " " + Имя + " " + Отчество);
			СтрТЗ.Телефон 				= ?(Не ЗначениеЗаполнено(НомерТел), Лояльность["phoneNumber"], НомерТел);			
			СтрТЗ.УчастникПЛ 			= Лояльность["active"];
			СтрТЗ.IDучастия 	 		= Лояльность["id"];
			СтрТЗ.НомерКарты 			= Лояльность["cardNumber"];
			СтрТЗ.КоличествоБонусов 	= Лояльность["amount"];
			СтрТЗ.Уровень				= НазваниеУровня;
			СтрТЗ.ДатаСоздания 			= crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(Лояльность["createdAt"]);
			СтрТЗ.ДатаАктивацииУчастия 	= crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(Лояльность["activatedAt"]);
			СтрТЗ.IDКлиента 			= ClientID;
				
		КонецЦикла;
		
	Иначе 

		Если ЗначениеЗаполнено(НомерТел) Тогда
			Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера
												 , "/api/v5/customers?filter[name]=" + НомерТел + "&apiKey=" + ApiKey);
		Иначе 
			Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера
								 , "/api/v5/customers?filter[discountCardNumber]=" + НомерКарты + "&apiKey=" + ApiKey);
		КонецЕсли;
				
		Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);
		
		Для Каждого Клиент Из Ответ["customers"] Цикл

			ФИО = "";
			Если Не Клиент["lastName"] = Неопределено Тогда
				ФИО = ФИО + Клиент["lastName"] + " ";	
			КонецЕсли;
				
			Если Не Клиент["firstName"] = Неопределено Тогда
				ФИО = ФИО + Клиент["firstName"] + " ";	
			КонецЕсли;
				
			Если Не Клиент["patronymic"] = Неопределено Тогда
				ФИО = ФИО + Клиент["patronymic"] + " ";	
			КонецЕсли;	

			СтрТЗ = УчастиеВПЛ.Добавить();
							
			СтрТЗ.ФИО 					= ФИО;
			СтрТЗ.Телефон 				= НомерТел;
			СтрТЗ.УчастникПЛ 			= Ложь;
			СтрТЗ.IDучастия 	 		= "";
			СтрТЗ.НомерКарты 			= "";
			СтрТЗ.КоличествоБонусов 	= "";
			СтрТЗ.Уровень 				= "";
			СтрТЗ.ДатаСоздания 			= Дата(1, 1, 1);
			СтрТЗ.ДатаАктивацииУчастия 	= Дата(1, 1, 1);
			СтрТЗ.IDКлиента 			= Клиент["id"];
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат УчастиеВПЛ;
	
КонецФункции

&НаКлиенте
Функция ВыделитьСлово(ИсходнаяСтрока, Позиция)
	
	Буфер = СокрЛ(ИсходнаяСтрока);
	ПозицияПослПробела = СтрНайти(Буфер, " ");

	Если ПозицияПослПробела = 0 Тогда
		ИсходнаяСтрока = "";
		Возврат Буфер;
	КонецЕсли;
	
	КонстантнаяПозиция = 3;
	
	Если Позиция = КонстантнаяПозиция Тогда 
		ВыделенноеСлово = СокрЛП(Буфер);
	Иначе 
		ВыделенноеСлово = СокрЛП(Лев(Буфер, ПозицияПослПробела));
		ИсходнаяСтрока = Сред(ИсходнаяСтрока, ПозицияПослПробела + 1);
	КонецЕсли;
	
	Возврат ВыделенноеСлово;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения ("ЗаполнитьФормуВыбораКлиента", ЭтотОбъект, Параметры);
		ОткрытьФорму("ОбщаяФорма.crm_РегистрацияКлиента"
					, Параметры
					, ЭтотОбъект
					,
					,
					,
					, ОбработчикОповещения);
	Иначе
		Закрыть(Параметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФормуВыбораКлиента(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт 
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда 
		ЗаполнитьФормуВыбораКлиентаНаСервере(РезультатОткрытияФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуВыбораКлиентаНаСервере(РезультатОткрытияФормы)
	
	Если РезультатОткрытияФормы <> Неопределено Тогда
		
		СписокКлиентов.Очистить();
		ЗаполнитьЗначенияСвойств(СписокКлиентов.Добавить(), РезультатОткрытияФормы);
		
		Если СписокКлиентов.Количество() > 0 Тогда 
			Элементы.Выбрать.Доступность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруТаблицыКлиента()
	
	УчастиеВПЛ = Новый ТаблицаЗначений;
	УчастиеВПЛ.Колонки.Добавить("ФИО");
	УчастиеВПЛ.Колонки.Добавить("Телефон");
	УчастиеВПЛ.Колонки.Добавить("УчастникПЛ");
	УчастиеВПЛ.Колонки.Добавить("IDучастия");
	УчастиеВПЛ.Колонки.Добавить("НомерКарты");
	УчастиеВПЛ.Колонки.Добавить("КоличествоБонусов");
	УчастиеВПЛ.Колонки.Добавить("Уровень");
	УчастиеВПЛ.Колонки.Добавить("ДатаСоздания");
	УчастиеВПЛ.Колонки.Добавить("ДатаАктивацииУчастия");
	УчастиеВПЛ.Колонки.Добавить("IDКлиента");
	
	Возврат УчастиеВПЛ;
	
КонецФункции

#КонецОбласти
