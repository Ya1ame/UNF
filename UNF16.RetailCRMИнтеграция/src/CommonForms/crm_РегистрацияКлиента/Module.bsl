
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, 
											"КлиентСозданВCRM, Телефон, Отчество, Имя, Фамилия, IDКлиента");
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Зарегистрировать(Команда)
	СтруктураВозврата = ЗарегистрироватьНаСервере();
	Закрыть(СтруктураВозврата);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЗарегистрироватьНаСервере()
	
	ИмяСервера = СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИмяСервера"));
	ApiKey = СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КлючCRM"));
	КодМагазина = СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КодМагазина"));
	
	Если Не КлиентСозданВCRM Тогда 
		
		Переменные = Новый Соответствие();
		Переменные.Вставить("apiKey", ApiKey);
		Переменные.Вставить("site", КодМагазина);
		
		Контрагент = Новый Соответствие();
		Контрагент.Вставить("patronymic",	crm_RetailCRMОбщийВызовСервера.Перекодировка(Отчество));  
		Контрагент.Вставить("lastName",		crm_RetailCRMОбщийВызовСервера.Перекодировка(Фамилия));
		Контрагент.Вставить("firstName",	crm_RetailCRMОбщийВызовСервера.Перекодировка(Имя));
		
		Телефоны = Новый Массив();
		
		Телефон1 = Новый Соответствие();
		Телефон1.Вставить("number",	Телефон);
		
		Телефоны.Добавить(Телефон1);
		
		Контрагент.Вставить("phones", Телефоны);
		
		ДанныеКонтрагента = Новый Соответствие();
		ДанныеКонтрагента.Вставить("contragentType",	"individual"); 
		ФИО = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
		ДанныеКонтрагента.Вставить("legalName", 		crm_RetailCRMОбщийВызовСервера.Перекодировка(ФИО));
		
		Контрагент.Вставить("contragent", 				ДанныеКонтрагента);
		
		Переменные.Вставить("customer", crm_RetailCRMОбщийВызовСервера.JSON(Контрагент));
		
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросPOST(ИмяСервера , "/api/v5/customers/create", Переменные);
		
		Если СтрНайти(Ответ, """success"":true") > 0 Тогда		
			Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);
			КлиентСозданВCRM = Истина;
			IDКлиента = Ответ["id"];
		КонецЕсли;
	КонецЕсли;
	
	УжеЕстьПЛ = Ложь;  
	Структура = Новый Структура;
	
	Попытка
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера 
															, "/api/v5/loyalty/accounts?apiKey=" + ApiKey 
															+ "&filter[customerId]=" + Формат(IDКлиента, "ЧГ=0"));  
		Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);

		Для каждого ДанныеКлиента Из Ответ["loyaltyAccounts"] Цикл
			УжеЕстьПЛ = Истина;	
			
			ФИО = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
			Если НЕ ЗначениеЗаполнено(ФИО) Тогда
				ФИО = "Не заполнено!";
			КонецЕсли;
			
			ДатаСоздания = crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(ДанныеКлиента["createdAt"]);
			ДатаАктивацииУчастия = crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(ДанныеКлиента["activatedAt"]);
			
			Структура.Вставить("ФИО"				  , ФИО);
			Структура.Вставить("Телефон"			  , ДанныеКлиента["phoneNumber"]);
			Структура.Вставить("УчастникПЛ"			  , ДанныеКлиента["active"]);
			Структура.Вставить("IDучастия"			  , ДанныеКлиента["id"]);
			Структура.Вставить("НомерКарты"			  , ДанныеКлиента["cardNumber"]);
			Структура.Вставить("КоличествоБонусов"	  , ДанныеКлиента["amount"]);
			Структура.Вставить("Уровень"			  ,	1);
			Структура.Вставить("ДатаСоздания"         , ДатаСоздания);
			Структура.Вставить("ДатаАктивацииУчастия" , ДатаАктивацииУчастия);
			Структура.Вставить("IDКлиента"			  , IDКлиента);
			
		КонецЦикла;
		
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
	Если КлиентСозданВCRM И Не УжеЕстьПЛ Тогда

		Переменные = Новый Соответствие();
		Переменные.Вставить("apiKey", ApiKey);
		Переменные.Вставить("site", КодМагазина);
		
		АккаунтЛояльности = Новый Соответствие();
		АккаунтЛояльности.Вставить("phoneNumber", Телефон);
		
		Контрагент = Новый Соответствие();
		Контрагент.Вставить("id",	Формат(IDКлиента, "ЧГ=0"));  
		
		АккаунтЛояльности.Вставить("customer", Контрагент);
		
		Переменные.Вставить("loyaltyAccount", crm_RetailCRMОбщийВызовСервера.JSON(АккаунтЛояльности));
		
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросPOST(ИмяСервера , "/api/v5/loyalty/account/create", Переменные);
		
		Успех = (СтрНайти(Ответ, """success"":true") > 0);
		
		Если Успех Тогда
			
			Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);
			ДанныеКлиента = Ответ["loyaltyAccount"];
			
			Структура = Новый Структура;
			ФИО = СокрЛП(Фамилия + " " + Имя + " " + Отчество);
			Если НЕ ЗначениеЗаполнено(ФИО) Тогда
				ФИО = "Не заполнено!";
			КонецЕсли;
			
			ДатаСоздания = crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(ДанныеКлиента["createdAt"]);
			ДатаАктивацииУчастия = crm_RetailCRMОбщийВызовСервера.ПреобразоватьПолученнуюДату(ДанныеКлиента["activatedAt"]);
				
			Структура.Вставить("ФИО"				  , ФИО);
			Структура.Вставить("Телефон"			  , ДанныеКлиента["phoneNumber"]);
			Структура.Вставить("УчастникПЛ"			  , ДанныеКлиента["active"]);
			Структура.Вставить("IDучастия"			  , ДанныеКлиента["id"]);
			Структура.Вставить("НомерКарты"			  , ДанныеКлиента["cardNumber"]);
			Структура.Вставить("КоличествоБонусов"	  , ДанныеКлиента["amount"]);
			Структура.Вставить("Уровень"			  , 1);
			Структура.Вставить("ДатаСоздания"		  , ДатаСоздания);
			Структура.Вставить("ДатаАктивацииУчастия" , ДатаАктивацииУчастия);
			Структура.Вставить("IDКлиента"			  , IDКлиента);
			
		Иначе
			ОбщегоНазначения.СообщитьПользователю("Трудности с выгрузкой клиента: ");
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти
