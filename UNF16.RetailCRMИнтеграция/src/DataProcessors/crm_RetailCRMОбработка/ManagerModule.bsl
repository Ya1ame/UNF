#Область СлужебныеПроцедурыИФункции

Функция УНФ_ПолучитьСвойство(Наименование, НазначениеСвойства, Тип = "Свойство", ТипЗначения = "Строка") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвойстваОбъектов.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Заголовок 	= &Наименование
	|	И СвойстваОбъектов.НаборСвойств = &НазначениеСвойства";
	
	Запрос.УстановитьПараметр("НазначениеСвойства", НазначениеСвойства);
	Запрос.УстановитьПараметр("Наименование", 		Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();                      
	
	ЭтоСведение = ?(Тип = "Сведение", Истина, Ложь);
	ТипЗначенияСвойства = Новый ОписаниеТипов("Строка", ,
										  Новый КвалификаторыСтроки(99, ДопустимаяДлина.Переменная));
	НазваниеТЧ	= ?(Тип = "Свойство", "ДополнительныеСведения", "ДополнительныеРеквизиты");					
	
	Если ТипЗначения = "Число" Тогда 
		ТипЗначенияСвойства = Новый ОписаниеТипов("Число",
							  Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный));
	КонецЕсли;
						  
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда                         
		Свойство = ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		
		Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		Свойство.Наименование 				= Наименование;
		Свойство.Заголовок 					= Наименование;                
		Свойство.ЭтоДополнительноеСведение 	= ЭтоСведение;
		Свойство.НаборСвойств 				= НазначениеСвойства;
		Свойство.ТипЗначения 				= ТипЗначенияСвойства;
		Свойство.Записать();
		Свойство = Свойство.Ссылка;
		
	КонецЕсли;
	
	Если НазначениеСвойства[НазваниеТЧ].Найти(Свойство) = Неопределено Тогда
		
		НаборОбъект = НазначениеСвойства.ПолучитьОбъект();
		НоваяСтрока = НаборОбъект[НазваниеТЧ].Добавить();
		НоваяСтрока.Свойство = Свойство;
		НаборОбъект.Записать();
		
	КонецЕсли;

	Возврат Свойство;

КонецФункции

Процедура УНФ_УстановитьСвойствоУОбъекта(Объект, Свойство, Значение) Экспорт
	
	Попытка 
		ЗаписьРегистра = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Объект 	= Объект;
		ЗаписьРегистра.Свойство = Свойство;
		ЗаписьРегистра.Значение = Значение;
		ЗаписьРегистра.Записать(Истина);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("RetailCRM"
								, УровеньЖурналаРегистрации.Ошибка
								,
								,
								, ОписаниеОшибки);
	КонецПопытки;

КонецПроцедуры

Функция УНФ_ПолучитьЗначениеСвойстваОбъекта(Объект, Свойство) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = &Свойство
	|	И ЗначенияСвойствОбъектов.Объект = &Объект";

	Запрос.УстановитьПараметр("Свойство", 	Свойство);
	Запрос.УстановитьПараметр("Объект", 	Объект);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;

КонецФункции

Функция УНФ_ВернутьКонтрагентаПоID(Идентификатор) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДополнительныеСведения.Свойство КАК Свойство,
	|	ДополнительныеСведения.Значение КАК Значение,
	|	ДополнительныеСведения.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Значение = &Значение
	|	И ДополнительныеСведения.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Значение", Идентификатор);
	СвойствоКонтрагентов = УНФ_ПолучитьСвойство("ИД", 
											Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты);
	Запрос.УстановитьПараметр("Свойство", СвойствоКонтрагентов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если ТипЗнч(Выборка.Объект) = Тип("СправочникСсылка.Контрагенты") Тогда 
			ИскКонт = Выборка.Объект;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИскКонт;
	
КонецФункции

Функция ПолучитьСвободныйОстаток(Номенклатура, Склад) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗапасыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ЗапасыОстатки.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрНакопления.Запасы.Остатки КАК ЗапасыОстатки
	               |ГДЕ
	               |	ЗапасыОстатки.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	               |	И ЗапасыОстатки.Номенклатура В(&Номенклатура)"; 
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Склад);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
	
Функция ПолучитьПаки(НомерЗаказа) Экспорт
	
	ИмяСервера = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИмяСервера");
	ApiKey = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КлючCRM");
	Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(ИмяСервера, 
								 "/api/v5/orders/packs?limit=100&filter[orderId]=" + НомерЗаказа + "&apiKey=" + ApiKey);	
	
	Ответ = crm_RetailCRMОбщийВызовСервера.UnJSON(Ответ);
	
	Успех = Ответ["success"];  
	
	ТаблицаБроней  = Новый ТаблицаЗначений;
	ТаблицаБроней.Колонки.Добавить("Номенклатура");
	ТаблицаБроней.Колонки.Добавить("ИдСклада");
	ТаблицаБроней.Колонки.Добавить("Количество");
	ТаблицаБроней.Колонки.Добавить("ИдПака");
	ТаблицаБроней.Колонки.Добавить("ЗакупочнаяЦена");
	
	Если Успех Тогда
		Для каждого пак Из Ответ["packs"] Цикл
				ИдентифТовара = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИдентификаторТовара");
				Если ИдентифТовара = "Код" Тогда
					искНом	= Справочники.Номенклатура.найтиПоКоду(пак["item"]["offer"]["xmlId"]);
				ИначеЕсли ИдентифТовара = "Артикул" Тогда
					искНом	= Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", пак["item"]["offer"]["xmlId"]);
				ИначеЕсли ИдентифТовара = "GUID" Тогда
					уид 	= Новый УникальныйИдентификатор(пак["item"]["offer"]["xmlId"]);
					искНом	= Справочники.Номенклатура.ПолучитьСсылку(уид);	
				КонецЕсли;
				
				Строка = ТаблицаБроней.Добавить();
				Строка.Номенклатура = искНом;
				Строка.ИдПака = Число(пак["id"]); 
				Строка.ИдСклада = Строка(пак["store"]);
				Строка.Количество = Число(пак["quantity"]);
				Строка.ЗакупочнаяЦена = Число(пак["purchasePrice"]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаБроней;
КонецФункции

#КонецОбласти