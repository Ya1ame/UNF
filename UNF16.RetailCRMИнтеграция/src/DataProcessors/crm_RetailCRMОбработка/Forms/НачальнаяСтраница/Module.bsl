
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	Попытка
		
		ИмяСервера 	= 	СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИмяСервера"));
		ApiKey		=	СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КлючCRM"));
		КодМагазина	=   СокрЛП(crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("КодМагазина"));
		
	Исключение
		
		ИмяСервера = "";
		ApiKey = "";
		КодМагазина = "";
		
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(ИмяСервера) ИЛИ НЕ ЗначениеЗаполнено(ApiKey) ИЛИ НЕ ЗначениеЗаполнено(КодМагазина) Тогда
		 
		Если ЗначениеЗаполнено(ApiKey) Тогда
			Объект.КлючCRM = ApiKey;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИмяСервера) Тогда
			Объект.ИмяСервера = ИмяСервера;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КодМагазина) Тогда
			Объект.КодМагазина = КодМагазина;
		КонецЕсли;
		
		Элементы.НачатьРаботу.Доступность = Ложь;
		УстановитьПользователяПоУмолчанию();
		
	Иначе
		
		 Закрыть();
		 ОткрытьФорму("Обработка.crm_RetailCRMОбработка.Форма.УправляемаяФорма"
		 			,
		 			,
		 			,
		 			,
		 			,
		 			,
		 			, РежимОткрытияОкнаФормы.Независимый);
		 
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МагазинИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	НачатьРаботуДоступностьИзменение();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	
	НачатьРаботуДоступностьИзменение();
	
КонецПроцедуры

&НаКлиенте
Процедура СайтRetailCRMИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	НачатьРаботуДоступностьИзменение();
	
КонецПроцедуры

&НаКлиенте
Процедура СайтRetailCRMПриИзменении(Элемент)
	
	НачатьРаботуДоступностьИзменение(); 
	
КонецПроцедуры

&НаКлиенте
Процедура КлючAPIПриИзменении(Элемент)
	
	НачатьРаботуДоступностьИзменение();
	
КонецПроцедуры

&НаКлиенте
Процедура КлючAPIИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	НачатьРаботуДоступностьИзменение();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НачатьРаботу(Команда)
	
	Попытка	
		
		Ответ = crm_RetailCRMОбщийВызовСервера.HTTPзапросGET(СокрЛП(Объект.ИмяСервера)
																 , "/api/credentials?apiKey=" + СокрЛП(Объект.КлючCRM));
		Ответ = crm_RetailCRMОбщийВызовСервера.UnJSONTest(Ответ);
		
		Если Ответ["success"] Тогда 
			Если типзнч(Ответ["sitesAvailable"]) = тип("Массив") Тогда
				НайдМагазин = Ответ["sitesAvailable"].Найти(СокрЛП(Объект.КодМагазина));
				Если НайдМагазин = Неопределено Тогда
					ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для данного Api-Ключа не разрешено использование указанного магазина!'"));
					Возврат;
				КонецЕсли;
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Для данного Api-Ключа не разрешено использование указанного магазина!'"));	
				Возврат;	
			КонецЕсли;
		КонецЕсли;
		
	Исключение
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Произошла ошибка при попытке проверки введенных данных, проверьте пожалуйста введенные данные!'"));
		Возврат;
		
	КонецПопытки;
	
	ЗагрузитьТабличныеЧасти();
	СохранитьКонстантыНаСервере();
	Закрыть();
	ОткрытьФорму("Обработка.crm_RetailCRMОбработка.Форма.УправляемаяФорма"
				,
				,
				,
				,
				,
				,
				, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура НачатьРаботуДоступностьИзменение()
	
	Если ЗначениеЗаполнено(Объект.КодМагазина)  И Объект.КодМагазина	<> " " 
	   И ЗначениеЗаполнено(Объект.ИмяСервера)	И Объект.ИмяСервера 	<> " " 
	   И ЗначениеЗаполнено(Объект.КлючCRM) 		И Объект.КлючCRM 		<> " " Тогда 
			
		Элементы.НачатьРаботу.Доступность = Истина;
	Иначе
		Элементы.НачатьРаботу.Доступность = Ложь;	
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура СохранитьКонстантыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.Мод_СохранитьКонстанты();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТабличныеЧасти()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗаполнитьТабличныеЧасти(Объект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПользователяПоУмолчанию()
	
	Если Константы.crm_УчтенаяЗаписьСКонстантами.Получить() = Справочники.Пользователи.ПустаяСсылка() Тогда
		Константы.crm_УчтенаяЗаписьСКонстантами.Установить(Пользователи.ТекущийПользователь());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
