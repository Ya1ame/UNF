
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСписокКонстант();
	ОбновитьРеквизитыФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СоздатьКонстантыПриИзменении(Элемент)
	
	ПодтверждениеСозданияКонстантПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДатуАктуальностиПриИзменении(Элемент)
	
	Если ИспользоватьДатуАктуальности = Истина Тогда 
		Элементы.ДатаАктуальности.Видимость = Истина;
	Иначе 
		Элементы.ДатаАктуальности.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастройкаОрганизацийНажатие(Элемент)
	
	ОткрытьФорму("Справочник.crm_Организации.ФормаСписка");

КонецПроцедуры 

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);

	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.ПутьКФайлу = ДиалогОткрытияФайла.Каталог + "\icml.xml";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКНастройкамНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);

	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Объект.ПутьКНастройкам = ДиалогОткрытияФайла.Каталог + "\customization.txt";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСпособыОформленияЗаказовПриИзменении(Элемент)
	
	Если Объект.ИспользоватьСпособыОформленияЗаказов Тогда
		Элементы.СпособыОформленияЗаказов.Видимость = Истина;
		Элементы.ОграничитьЗагрузкуЗаказовПоСпособуОформления.Видимость = Истина;
	Иначе
		Элементы.СпособыОформленияЗаказов.Видимость = Ложь;
		Элементы.ОграничитьЗагрузкуЗаказовПоСпособуОформления.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьКонстанты(Команда)
	
	СоздатьКонстантыНаСервере();
	ОбновитьСписокКонстант();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКонстанты(Команда)
	
	СохранитьКонстантыНаСервере(); 
	ОбновитьРеквизитыФормы();
		
КонецПроцедуры

&НаКлиенте
Процедура Остатки(Команда)
	
	Состояние("Выгрузка остатков!");
	ОстаткиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	ВыполнитьОбменНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаказПоИД(Команда)
	
	ЗагрузитьЗаказПоИДНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаказы(Команда)
	
	ЗагрузитьЗаказыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаКаталога(Команда)
	
	ВыгрузкаКаталогаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияСкладскойСистемы(Команда)
	
	РегистрацияСкладскойСистемыНаСервере();
	ПроверитьРегистрациюМодуляИнтеграцииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНастройкиИзФайла(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ПутьКНастройкам) Тогда
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Заголовок 			= "Сохранить настройки";
		Диалог.МножественныйВыбор 	= Ложь;
		Диалог.Фильтр 				= "Текстовый документ(*.txt)|*.txt";
		
		Если Диалог.Выбрать() Тогда
			Путь = Диалог.ПолноеИмяФайла;
		Иначе
			Путь = Объект.ПутьКНастройкам;
		КонецЕсли;
		
		Объект.ПутьКНастройкам = Путь;
		СохранитьКонстантыНаСервере();
		ВосстановитьНастройкиИзФайлаНаСервере(Путь);
		
	Иначе 
		
		ВосстановитьНастройкиИзФайлаНаСервере(Объект.ПутьКНастройкам);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВФайл(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ПутьКНастройкам) Тогда
		
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		Диалог.Заголовок 			= "Сохранить настройки";
		Диалог.МножественныйВыбор 	= Ложь;
		Диалог.Фильтр = "Текстовый документ(*.txt)|*.txt";
		
		Если Диалог.Выбрать() Тогда
			Путь = Диалог.ПолноеИмяФайла;
		Иначе
			Путь = Объект.ПутьКНастройкам; 
		КонецЕсли;
		
		Объект.ПутьКНастройкам = Путь;
		СохранитьКонстантыНаСервере();
		СохранитьНастройкиВФайлНаСервере(Путь);
	Иначе 
		
		СохранитьНастройкиВФайлНаСервере(Объект.ПутьКНастройкам);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСклады(Команда)
	ЗаполнитьСкладыНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАктивныеСтатусы(Команда)
	ЗаполнитьАктивныеСтатусыНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТипыДоставок(Команда)
	ЗаполнитьТипыДоставокНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТипыЦен(Команда)
	ЗаполнитьТипыЦенНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТипыОплат(Команда)
	ЗаполнитьТипыОплатНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМенеджеров(Команда)
	ЗаполнитьМенеджеровНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатусыТоваров(Команда)
	ЗаполнитьСтатусыТоваровНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпособыОформления(Команда)
	ЗаполнитьСпособыОформленияНаСервере();
	ПоказатьОповещениеПользователя("Модуль RetailCRM", , "Не забудьте сохранить изменения!");
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьРеквизитыФормы()
	
	НесколькоОрганизаций = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("НесколькоОрганизаций");
	Если НесколькоОрганизаций <> Неопределено Тогда
		Элементы.СоответствиеОрганизаций.Видимость = НесколькоОрганизаций;
	КонецЕсли;
	
	ИспользоватьТипыЦен = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьТипыЦен");
	Если ИспользоватьТипыЦен <> Неопределено Тогда
		Элементы.ТипыЦен.Видимость = ИспользоватьТипыЦен;
	КонецЕсли;
	  
	ВыгружатьОстатки = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ВыгружатьОстатки");
	Если ВыгружатьОстатки <> Неопределено Тогда
		Элементы.ВыгружатьОстаткиСУчетомРезервов.Видимость = ВыгружатьОстатки;
	КонецЕсли;
	
	СозданиеОплат = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("СозданиеОплат");
	Если СозданиеОплат <> Неопределено Тогда
		Элементы.Оплаты.Видимость = СозданиеОплат;
		Элементы.СоответствиеТиповОплат.Доступность = СозданиеОплат;
	КонецЕсли;
	  
	ИспользоватьТипыДоставок = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьТипыДоставок");
	Если ИспользоватьТипыДоставок <> Неопределено Тогда  
		Элементы.СоответствиеТипыДоставок.Доступность = ИспользоватьТипыДоставок;
		Элементы.Доставка.Видимость = ИспользоватьТипыДоставок;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ИдентификаторТовара) Тогда 
		Объект.ИдентификаторТовара = "Код"; 
	КонецЕсли;
	
	Если crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользованиеХарактеристик") = Истина Тогда
		Элементы.ИдентификаторТовара.Видимость = Ложь; 
		Элементы.GUIDОрганизации.Видимость = Истина;
	Иначе 
		Элементы.ИдентификаторТовара.Видимость = Истина;
		Элементы.GUIDОрганизации.Видимость = Ложь;
	КонецЕсли;
	
	СпособыОформления = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользоватьСпособыОформленияЗаказов");
	Если СпособыОформления <> Неопределено Тогда
		Элементы.СпособыОформленияЗаказов.Видимость = СпособыОформления;
		Элементы.ОграничитьЗагрузкуЗаказовПоСпособуОформления.Видимость = СпособыОформления;
	КонецЕсли;
	
	РаботаСРозницей = crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("РаботаСРозницей");
	Если РаботаСРозницей <> Неопределено Тогда
		Элементы.Розница.Видимость = РаботаСРозницей;
	КонецЕсли; 
	
	Если ИспользоватьДатуАктуальности = Истина Тогда 
		Элементы.ДатаАктуальности.Видимость = Истина;
	Иначе 
		Элементы.ДатаАктуальности.Видимость = Ложь;
	КонецЕсли;
	
	Если ПроверитьРегистрациюМодуляИнтеграции() = Истина Тогда
		Элементы.РегистрацияСкладскойСистемы.Заголовок = "Модуль установлен";
		ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("crm_МодульУстановлен");
		Элементы.РегистрацияСкладскойСистемы.ЦветФона = ЦветФона; 
	Иначе
		Элементы.РегистрацияСкладскойСистемы.Заголовок = "Регистрация cкладской cистемы";
		ЦветФона = ОбщегоНазначенияКлиент.ЦветСтиля("crm_РегистрацияСкладскойСистемы");
		Элементы.РегистрацияСкладскойСистемы.ЦветФона = ЦветФона;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьРегистрациюМодуляИнтеграции()
	
	Возврат ПроверитьРегистрациюМодуляИнтеграцииНаСервере();
	
КонецФункции

&НаСервере
Процедура СоздатьКонстантыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.СоздатьКонстанты();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьКонстантыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.Мод_СохранитьКонстанты();
	
КонецПроцедуры  

&НаСервере
Процедура ОбновитьСписокКонстант()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Элементы.Версия.Заголовок = "Версия: " + Обработка.Версия;
	Элементы.ДатаРедакции.Заголовок = "Дата редакции: " + Обработка.ДатаРедакции;
	Элементы.РелизКонф.Заголовок = "Конфигурация: " + Обработка.РелизКонф;
	Элементы.Платформа.Заголовок = "1С:Предприятие: " + Обработка.РелизПлафт;
	Обработка.Мод_ОбновитьСписокКонстант(Объект);
	Элементы.ТабКонстанты.ПодчиненныеЭлементы.ТабКонстантыЗначение.ВыбиратьТип = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПодтверждениеСозданияКонстантПриИзмененииНаСервере()
	
	Элементы.СоздатьКонстанты1.Доступность = Элементы.СоздатьКонстанты1.Доступность * - 1 + 1;
	
КонецПроцедуры

&НаСервере
Процедура ОстаткиНаСервере()
	
	Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	ОбщегоНазначения.СообщитьПользователю("Начало выгрузки остатков " + Дата);
	Обработка = РеквизитФормыВЗначение("Объект");
	Если crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользованиеХарактеристик") = Истина Тогда
		Обработка.Мод_ОстаткиИЦеныВCRMХарактеристики();
	Иначе 
		Обработка.Мод_ОстаткиИЦеныВCRM();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.Мод_ВыполнитьОбмен();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаказПоИДНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.Мод_ЗагрузитьЗаказПоИД(ИДЗаказаДляЗагрузки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЗаказыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.Мод_ЗагрузитьЗаказы(ИспользоватьДатуАктуальности, Объект.ДатаАктуальности, Объект.ИДПоследнихИзменений);
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузкаКаталогаНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Если crm_RetailCRMОбщийВызовСервера.ПолучитьЗначениеКонстанты("ИспользованиеХарактеристик") = Истина Тогда
		Обработка.Мод_ВыгрузкаКаталогаВXMLХарактеристики(Объект.ТабКаталог, Объект.ПутьКФайлу);
	Иначе 
		Обработка.Мод_ВыгрузкаКаталогаВXML(Объект.ТабКаталог, Объект.ПутьКФайлу);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РегистрацияСкладскойСистемыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.РегистрацияСкладскойСистемыНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьРегистрациюМодуляИнтеграцииНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Возврат Обработка.ПроверитьРегистрациюМодуляИнтеграцииНаСервере();
	
КонецФункции

&НаСервере
Функция ПолучитьФайлНастроек(Путь)
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(Путь);
	ТекстФайла = Текст.ПолучитьТекст();
	
	МассивНастроек = ЗначениеИзСтрокиВнутр(ТекстФайла);
	
	ТипВосстановленногоЗначения = "";
	Попытка
		ТипВосстановленногоЗначения = ТипЗнч(МассивНастроек);
	Исключение
	    ОбщегоНазначения.СообщитьПользователю("Не удалось восстановить настройки.");
		Возврат Неопределено;
	КонецПопытки;
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("ТипВосстановленногоЗначения", ТипВосстановленногоЗначения);
	СтруктураВозврата.Вставить("МассивНастроек", МассивНастроек);	
	
	Возврат СтруктураВозврата;
		
КонецФункции

&НаСервере
Процедура ВосстановитьНастройкиИзФайлаНаСервере(Путь)
	
	СтруктураНастроек = ПолучитьФайлНастроек(Путь);
	ТипВосстановленногоЗначения = СтруктураНастроек.ТипВосстановленногоЗначения;
	МассивНастроек = СтруктураНастроек.МассивНастроек;
	
	Если ТипВосстановленногоЗначения = Тип("СписокЗначений") Тогда
		Для Каждого ЭлементНастройки Из МассивНастроек Цикл
			
			Если ТипЗнч(ЭлементНастройки.Значение) = Тип("ТаблицаЗначений") Тогда
				
				Попытка
					Объект[ЭлементНастройки.Представление].Загрузить(ЭлементНастройки.Значение);
				Исключение
					ОписаниеОшибки = ОписаниеОшибки();
					ЗаписьЖурналаРегистрации("RetailCRM"
											, УровеньЖурналаРегистрации.Ошибка
											, 
											, 
											, ОписаниеОшибки);
				КонецПопытки;
				
			ИначеЕсли ТипЗнч(ЭлементНастройки.Значение) = Тип("Соответствие") Тогда
				
				Для Каждого ПрочаяНастройка Из ЭлементНастройки.Значение Цикл
					Попытка
						Объект[ПрочаяНастройка.Ключ] = ПрочаяНастройка.Значение;
					Исключение
						ОписаниеОшибки = ОписаниеОшибки();
						ЗаписьЖурналаРегистрации("RetailCRM"
												, УровеньЖурналаРегистрации.Ошибка
												, 
												, 
												, ОписаниеОшибки);
					КонецПопытки;
				КонецЦикла;
			Иначе
				Продолжить;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	НастройкаКонстант = МассивНастроек[0].Значение;
	Объект.ТабКонстанты.Загрузить(НастройкаКонстант);
	
	ОбщегоНазначения.СообщитьПользователю("Настройки восстановлены.");

КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиВФайлНаСервере(Путь)
	
	Если Не ЗначениеЗаполнено(Путь) Тогда
		Путь = КаталогВременныхФайлов() + "customization.txt";
	КонецЕсли;

	Текст = Новый ТекстовыйДокумент;
	ПараметрыОбъекта =  Метаданные.Обработки.crm_RetailCRMОбработка;
	
	СохраняемыйМассив = Новый СписокЗначений;
	Для каждого ТабличнаяЧасть Из ПараметрыОбъекта.ТабличныеЧасти Цикл 
		ТЧ = Объект[ТабличнаяЧасть.Имя].Выгрузить();
		СохраняемыйМассив.Добавить(ТЧ, Строка(ТабличнаяЧасть.Имя));
	КонецЦикла;
			
	ПрочиеНастройки = Новый Соответствие;
	Для каждого Реквизит Из ПараметрыОбъекта.Реквизиты Цикл
		ПрочиеНастройки.Вставить(Реквизит.Имя, 	Объект[Реквизит.Имя]);		
	КонецЦикла;
	
	СохраняемыйМассив.Добавить(ПрочиеНастройки, 	"ПрочиеНастройки");
	
	СохраняемаяСтрока = ЗначениеВСтрокуВнутр(СохраняемыйМассив);
	
	Текст.ДобавитьСтроку(СохраняемаяСтрока);

	Попытка
		Текст.Записать(Путь);
		ОбщегоНазначения.СообщитьПользователю("Настройки сохранены.");
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Не удалось записать файл: " + Путь);
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладыНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьСклады(Объект.ТабСклады); 

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАктивныеСтатусыНаСервере()
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьСтатусы(Объект.ТабСтатусы);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыДоставокНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьТипыДоставок(Объект.ТабТипыДоставок); 
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыЦенНаСервере()
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьТипыЦен(Объект.ТабТипыЦен);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТипыОплатНаСервере()
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьТипыОплат(Объект.ТабТипыОплат);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМенеджеровНаСервере() 
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьМенеджеров(Объект.ТабМенеджеры);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусыТоваровНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьСтатусыТоваров(Объект.ТабСтатусыТоваров);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпособыОформленияНаСервере()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ЗагрузитьСпособыОформления(Объект.ТабСпособыОформления);
	
КонецПроцедуры

#КонецОбласти